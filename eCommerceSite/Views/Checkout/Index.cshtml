@model CheckoutViewModel
@{
    ViewData["Title"] = "Checkout";
}

@if (!ViewData.ModelState.IsValid)
{<div class="alert-danger">
    @Html.ValidationSummary(false)
</div>
}

<h2>Checkout</h2>
<form method="post" id="checkoutForm">
    <div class="form-group">
        <label asp-for="Email" class="control-label">Email</label>
        <input type="email" asp-for="Email" class="form-control" placeholder="example@domain.com" required />
    </div>
    <div class="form-group">
        <label asp-for="PhoneNumber" class="control-label">Phone Number</label>
        <input type="tel" asp-for="PhoneNumber" class="form-control" placeholder="(000)000-0000" required />
    </div>
    <div class="form-group">
        <label asp-for="Street1" class="control-label">Address Line 1</label>
        <input type="text" asp-for="Street1" class="form-control" placeholder="222 N Example Ave" required />
    </div>
    <div class="form-group">
        <label asp-for="Street2" class="control-label">Address Line 2 (optional)</label>
        <input type="text" asp-for="Street2" class="form-control" placeholder="ex: Unit 2S, Apartment 3B, etc." />
    </div>
    <div class="form-group">
        <label asp-for="City" class="control-label">City</label>
        <input type="text" asp-for="City" class="form-control" placeholder="City Name" required />
    </div>
    <div class="form-group">
        <label asp-for="State" class="control-label">State</label>
        <input type="text" asp-for="State" class="form-control" placeholder="State Abbreviation" required />
    </div>
    <div class="form-group">
        <label asp-for="PostalCode" class="control-label">Postal Code</label>
        <input type="text" asp-for="PostalCode" class="form-control" placeholder="ex: 90210" required />
    </div>
    <button class="btn btn-default btn-block" disabled id="validate-address">Validate Address</button>
    <div class="form-group">
        <label asp-for="Recipient" class="control-label">Recipient Name (optional)</label>
        <input type="text" asp-for="Recipient" class="form-control" placeholder="Recipient Name" />
    </div>
    <div class="form-group">
        <label asp-for="Instructions" class="control-label">Delivery Insturctions (optional)</label>
        <input type="text" asp-for="Instructions" class="form-control" placeholder="ex: ring last doorbell, knock 4 times, etc" />
    </div>
    <div class="form-group">
        <label for="card-number">Card Number</label>
        <div class="form-control" id="card-number"></div>
    </div>
    <div class="form-group">
        <label for="cvv">CVV</label>
        <div class="form-control" id="cvv"></div>
    </div>
    <div class="form-group">
        <label for="expiration-date">Expiration Date</label>
        <div class="form-control" id="expiration-date"></div>
    </div>
    <input type="hidden" id="braintree-nonce" name="braintreeNonce" />


    <button class="btn btn-primary">Place Order</button>
</form>

@section Scripts{
    <script src="https://js.braintreegateway.com/web/3.42.0/js/client.min.js"></script>
    <script src="https://js.braintreegateway.com/web/3.42.0/js/hosted-fields.min.js"></script>
    <script type="text/javascript">
        braintree.client.create({
            authorization: '@ViewBag.BraintreeClientToken'
        }, function (clientErr, clientInstance) {
            if (clientErr) {
                console.error(clientErr);
                return;
            }
            braintree.hostedFields.create({
                client: clientInstance,
                styles: {
                    'input.invalid': {
                        'color': 'red'
                    },
                    'input.valid': {
                        'color': 'green'
                    }
                },
                fields: {
                    number: {
                        selector: '#card-number',
                        placeholder: '4111 1111 1111 1111'
                    },
                    cvv: {
                        selector: '#cvv',
                        placeholder: '123'
                    },
                    expirationDate: {
                        selector: '#expiration-date',
                        placeholder: '10/2019'
                    }
                }
            }, function (hostedFieldsErr, hostedFieldsInstance) {
                    if (hostedFieldsErr) {
                    console.error(hostedFieldsErr);
                    return;
                }
                    var form = document.querySelector("#checkoutForm");
                    form.addEventListener('submit', function (event) {
                    event.preventDefault();
                    hostedFieldsInstance.tokenize(function (tokenizeErr, payload) {
                        if (tokenizeErr) {
                            console.error(tokenizeErr);
                        }
                        document.querySelector('#braintree-nonce').value = payload.nonce;
                        //console.log('Got a nonce: ' + payload.nonce);
                        form.submit();
                    });
                }, false);
            });
        });
    </script>
    <!--SmartyStreets Script-->>
    <script type="text/javascript">
        var validateAddressButton = document.querySelector("#validate-address");
        document.querySelectorAll("#Street1, #City, #State").forEach(e => {
            e.addEventListener("change", (event) => {
                var addressValidationEnabled = true;
                document.querySelectorAll("#Street1, #City, #State").forEach(e2 => {
                    if (e2.value.length == 0) {
                        addressValidationEnabled = false;
                    }
                });
                if (addressValidationEnabled) {
                    validateAddressButton.removeAttribute('disabled');
                } else {
                    validateAddressButton.setAttribute('disabled', 'disabled');
                }
            })
        })

        validateAddressButton.addEventListener("click", (event) => {
            event.preventDefault();
            var street = document.querySelector("#Street1").value;
            var city = document.querySelector("#City").value;
            var state = document.querySelector("#State").value;
            var zipCode = document.querySelector("#PostalCode").value;
            var requestUrl = "/Checkout/ValidateAddress?";
            if (street != null && street.length > 0) {
                requestUrl += "street=" + street + "&";
            }
            if (city != null && city.length > 0) {
                requestUrl += "city=" + city + "&";
            }
            if (state != null && state.length > 0) {
                requestUrl += "state=" + state + "&";
            }
            if (zipCode != null && zipCode.length > 0) {
                requestUrl += "zipCode=" + zipCode + "&";
            }
            fetch(requestUrl).then((response) => {
                response.json().then((json) => {
                    if (json.length == 0) {
                        validateAddressButton.classList.remove("btn-success");
                        validateAddressButton.classList.add("btn-danger");
                        document.querySelectorAll("#Street1, #City, #State, #PostalCode").forEach(e3 => {
                            e3.parentNode.classList.add("has-error");
                            e3.parentNode.classList.remove("has-success");
                        });

                    } else {
                        validateAddressButton.classList.add("btn-success");
                        validateAddressButton.classList.remove("btn-danger");
                        document.querySelectorAll("#Street1, #City, #State, #PostalCode").forEach(e3 => {
                            e3.parentNode.classList.add("has-success");
                            e3.parentNode.classList.remove("has-error");
                        });
                        if (json[0].components.plus4_code != null && json[0].components.plus4_code.length > 0) {
                            document.querySelector("#PostalCode").value = json[0].components.zipcode + "-" + json[0].components.plus4_code
                        } else {
                            document.querySelector("#PostalCode").value = json[0].components.zipcode;
                        }
                        document.querySelector("#Street1").value = json[0].delivery_line_1;
                        document.querySelector("#City").value = json[0].components.city_name;
                        document.querySelector("#State").value = json[0].components.state_abbreviation

                    }
                })

            })
        });
    </script>
}
